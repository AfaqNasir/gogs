name: Go
on:
  push:
    branches:
      - main
      - 'release/**'
    paths:
      - '**.go'
      - 'go.mod'
      - '.golangci.yml'
      - '.github/workflows/go.yml'
  pull_request:
    paths:
      - '**.go'
      - 'go.mod'
      - '.golangci.yml'
      - '.github/workflows/go.yml'
env:
  GOPROXY: "https://proxy.golang.org"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --timeout=30m
      - name: Install Task
        uses: arduino/setup-task@v1
      - name: Install go-bindata
        shell: bash
        run: |
          curl --silent --location --output /usr/local/bin/go-bindata https://github.com/kevinburke/go-bindata/releases/download/v3.23.0/go-bindata-linux-amd64
          chmod +x /usr/local/bin/go-bindata
      - name: Check Go module tidiness
        shell: bash
        run: |
          go mod tidy
          STATUS=$(git status --porcelain)
          if [ ! -z "$STATUS" ]; then
            echo "Unstaged files:"
            echo $STATUS
            echo "Run 'go mod tidy' and commit them"
            exit 1
          fi

  test:
    name: Test
    strategy:
      matrix:
        go-version: [ 1.17.x, 1.18.x, 1.19.x ]
        platform: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests with coverage
        run: go test -v -race -coverprofile=coverage -covermode=atomic ./...
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v1.5.0
        with:
          file: ./coverage
          flags: unittests
      - name: Send email on failure
        uses: dawidd6/action-send-mail@v3
        if: ${{ failure() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        with:
          server_address: smtp.mailgun.org
          server_port: 465
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: GitHub Actions (${{ github.repository }}) job result
          to: github-actions-8ce6454@unknwon.io
          from: GitHub Actions (${{ github.repository }})
          reply_to: noreply@unknwon.io
          body: |
            The job "${{ github.job }}" of ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }} completed with "${{ job.status }}".

            View the job run at: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  # Running tests with race detection consumes too much memory on Windows,
  # see https://github.com/golang/go/issues/46099 for details.
  test-windows:
    name: Test
    strategy:
      matrix:
        go-version: [ 1.17.x, 1.18.x, 1.19.x ]
        platform: [ windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests with coverage
        run: go test -v -coverprofile=coverage -covermode=atomic ./...
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v1.5.0
        with:
          file: ./coverage
          flags: unittests
      - name: Send email on failure
        uses: dawidd6/action-send-mail@v3
        if: ${{ failure() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        with:
          server_address: smtp.mailgun.org
          server_port: 465
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: GitHub Actions (${{ github.repository }}) job result
          to: github-actions-8ce6454@unknwon.io
          from: GitHub Actions (${{ github.repository }})
          reply_to: noreply@unknwon.io
          body: |
            The job "${{ github.job }}" of ${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }} completed with "${{ job.status }}".

            View the job run at: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
